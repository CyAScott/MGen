using NUnit.Framework;
using static MGen.Abstractions.Generators.TestModelGenerator;

namespace MGen.Abstractions.Generators.DotNetSerialization;

class DotNetSerializationSupportTests
{
    [Test]
    public void TestDotNetSerializationGuid() =>
        Compile(
            "using MGen;",
            "using System;",
            "using System.Runtime.Serialization;",
            "",
            "namespace Example;",
            "",
            "[Generate]",
            "interface IExample : ISerializable",
            "{",
            "    Guid Id { get; set; }",
            "}")
        .ShouldBe(
            "namespace Example",
            "{",
            "    [System.SerializableAttribute]",
            "    class ExampleModel : IExample",
            "    {",
            "        /// <summary>",
            "        /// Deserializes the class.",
            "        /// </summary>",
            "        protected ExampleModel([System.Diagnostics.CodeAnalysis.NotNullAttribute]System.Runtime.Serialization.SerializationInfo info, [System.Diagnostics.CodeAnalysis.NotNullAttribute]System.Runtime.Serialization.StreamingContext context)",
            "        {",
            "            if (info == null) throw new System.ArgumentNullException(\"info\");",
            "",
            "            foreach (var it in info)",
            "            {",
            "                switch (it.Name)",
            "                {",
            "                    case \"Id\":",
            "                        {",
            "                            _id = (System.Guid)it.Value;",
            "                        }",
            "                        break;",
            "                }",
            "            }",
            "        }",
            "",
            "        public System.Guid Id",
            "        {",
            "            get",
            "            {",
            "                return _id;",
            "            }",
            "            set",
            "            {",
            "                _id = value;",
            "            }",
            "        }",
            "",
            "        System.Guid _id;",
            "",
            "        void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)",
            "        {",
            "            if (info == null) throw new System.ArgumentNullException(\"info\");",
            "",
            "            info.AddValue(\"Id\", _id, typeof(System.Guid));",
            "        }",
            "    }",
            "}",
            "");

    [Test]
    public void TestDotNetSerializationInt() =>
        Compile(
            "using MGen;",
            "using System.Runtime.Serialization;",
            "",
            "namespace Example;",
            "",
            "[Generate]",
            "interface IExample : ISerializable",
            "{",
            "    int Id { get; set; }",
            "}")
        .ShouldBe(
            "namespace Example",
            "{",
            "    [System.SerializableAttribute]",
            "    class ExampleModel : IExample",
            "    {",
            "        /// <summary>",
            "        /// Deserializes the class.",
            "        /// </summary>",
            "        protected ExampleModel([System.Diagnostics.CodeAnalysis.NotNullAttribute]System.Runtime.Serialization.SerializationInfo info, [System.Diagnostics.CodeAnalysis.NotNullAttribute]System.Runtime.Serialization.StreamingContext context)",
            "        {",
            "            if (info == null) throw new System.ArgumentNullException(\"info\");",
            "",
            "            foreach (var it in info)",
            "            {",
            "                switch (it.Name)",
            "                {",
            "                    case \"Id\":",
            "                        {",
            "                            _id = (int)it.Value;",
            "                        }",
            "                        break;",
            "                }",
            "            }",
            "        }",
            "",
            "        public int Id",
            "        {",
            "            get",
            "            {",
            "                return _id;",
            "            }",
            "            set",
            "            {",
            "                _id = value;",
            "            }",
            "        }",
            "",
            "        int _id;",
            "",
            "        void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)",
            "        {",
            "            if (info == null) throw new System.ArgumentNullException(\"info\");",
            "",
            "            info.AddValue(\"Id\", _id, typeof(int));",
            "        }",
            "    }",
            "}",
            "");

    [Test]
    public void TestDotNetSerializationString() =>
        Compile(
            "using MGen;",
            "using System.Runtime.Serialization;",
            "",
            "namespace Example;",
            "",
            "[Generate]",
            "interface IExample : ISerializable",
            "{",
            "    string Id { get; set; }",
            "}")
        .ShouldBe(
            "namespace Example",
            "{",
            "    [System.SerializableAttribute]",
            "    class ExampleModel : IExample",
            "    {",
            "        /// <summary>",
            "        /// Deserializes the class.",
            "        /// </summary>",
            "        protected ExampleModel([System.Diagnostics.CodeAnalysis.NotNullAttribute]System.Runtime.Serialization.SerializationInfo info, [System.Diagnostics.CodeAnalysis.NotNullAttribute]System.Runtime.Serialization.StreamingContext context)",
            "        {",
            "            if (info == null) throw new System.ArgumentNullException(\"info\");",
            "",
            "            foreach (var it in info)",
            "            {",
            "                switch (it.Name)",
            "                {",
            "                    case \"Id\":",
            "                        {",
            "                            _id = (string)it.Value;",
            "                        }",
            "                        break;",
            "                }",
            "            }",
            "        }",
            "",
            "        public string Id",
            "        {",
            "            get",
            "            {",
            "                return _id;",
            "            }",
            "            set",
            "            {",
            "                _id = value;",
            "            }",
            "        }",
            "",
            "        string _id;",
            "",
            "        void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)",
            "        {",
            "            if (info == null) throw new System.ArgumentNullException(\"info\");",
            "",
            "            info.AddValue(\"Id\", _id, typeof(string));",
            "        }",
            "    }",
            "}",
            "");
}